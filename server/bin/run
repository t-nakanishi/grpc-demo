#!/usr/bin/env ruby

require "bundler/setup"

require 'logger'
require 'grpc'
require 'echo_services_pb'
require 'hello_services_pb'

class HelloServer < Hello::Hello::Service
  EchoLogger = Logger.new(STDOUT)

  def hello_api(hello_req, _unused_call)
    EchoLogger.info("echo \"#{hello_req.message}\"")
    Hello::HelloResponse.new(message: hello_req.message + "world")
  end
end

def main
  s = GRPC::RpcServer.new
  s.add_http2_port('0.0.0.0:50051', :this_port_is_insecure)

  logger = Logger.new(STDOUT)
  logger.info("... running insecurely on 0.0.0.0:50051")

  s.handle(HelloServer)
  # Runs the server with SIGHUP, SIGINT and SIGQUIT signal handlers to 
  #   gracefully shutdown.
  # User could also choose to run server via call to run_till_terminated
  s.run_till_terminated_or_interrupted(['SIGHUP','SIGINT','SIGQUIT'])
end

main
